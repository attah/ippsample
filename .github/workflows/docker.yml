on:
  workflow_run:
    workflows: [ build ]
    branches: [ master ]
    types: [completed]

jobs:
  verify:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    
  build:
    runs-on: ubuntu-latest
    needs: verify
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ippsample:${{ github.sha }}
          outputs: type=docker,dest=/tmp/ippsample.tar
      -
        name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ippsample
          path: /tmp/ippsample.tar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ippsample
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/ippsample.tar
      -
        name: Detail image
        run: |
          docker images --format "table {{.ID}}\t{{.Repository}}\t{{.Tag}}\t{{.Size}}\t{{.CreatedSince}}"
      -
        name: Call commands
        run: |
          docker run ippsample:${{ github.sha }} ipp3dprinter --version
          docker run ippsample:${{ github.sha }} ippeveprinter --version
          docker run ippsample:${{ github.sha }} ippfind --version
          docker run ippsample:${{ github.sha }} ipptool --version

  secrets:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      PUSH_TO_HUB: ${{ steps.check.outputs.PUSH_TO_HUB }}
      PUSH_TO_GHCR: ${{ steps.check.outputs.PUSH_TO_GHCR }}
    steps:
      - run: >
          echo "::set-output name=PUSH_TO_HUB::${{ secrets.DOCKERHUB_IMAGE != '' }}";
          echo "::set-output name=PUSH_TO_GHCR::${{ secrets.GHCR_IMAGE != '' }}";

  hub:
    runs-on: ubuntu-latest
    needs: secrets
    if: needs.secrets.outputs.PUSH_TO_HUB == 'true'
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ippsample
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/ippsample.tar
      -
        name: Tag image
        run: |
          docker tag ippsample:${{ github.sha }} ${{ secrets.DOCKERHUB_IMAGE }}:${{ github.sha }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Push image
        run: |
          docker push ${{ secrets.DOCKERHUB_IMAGE }}:${{ github.sha }}

  ghcr:
    runs-on: ubuntu-latest
    needs: secrets
    if: needs.secrets.outputs.PUSH_TO_GHCR == 'true'
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ippsample
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/ippsample.tar
      -
        name: Tag image
        run: |
          docker tag ippsample:${{ github.sha }} ${{ secrets.GHCR_IMAGE }}:${{ github.sha }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Push image
        run: |
          docker push ghcr.io/${{ secrets.GHCR_IMAGE }}:${{ github.sha }}
